@model Bloggie.Web.Models.ViewModels.HomeViewModel


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Home Page";
}

<style>
    /* Scrollable Tag Container */
    .tags-container {
    display: flex;
    align-items: center;
    position: relative;
    width: 100%;
    padding: 10px 0;
    background: white;
    }

    /* Scrollable Area */
    .tags-scroll {
    display: flex;
    overflow-x: auto;
    gap: 12px;
    padding: 10px;
    white-space: nowrap;
    scrollbar-width: none; /* Hides scrollbar in Firefox */
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    width: 100%;
    }

    /* Hide scrollbar in WebKit browsers (Chrome, Safari) */
    .tags-scroll::-webkit-scrollbar {
    display: none;
    }

    /* Tag Card Styling */
    .tag-card {
    min-width: 130px;
    padding: 10px 15px;
    border-radius: 10px;
    font-size: 14px;
    font-weight: bold;
    text-decoration: none;
    border: none;
    cursor: pointer;
    transition: transform 0.3s ease-in-out;
    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);
    background: aliceblue;
    color: #333;
    text-align: center;
    scroll-snap-align: start;
    }

    /* Hover Effect */
    .tag-card:hover {
    transform: scale(1.05);
    box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);
    }

    /* Arrow Buttons */
    .scroll-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    color: black;
    border: none;
    font-size: 24px;
    cursor: pointer;
    z-index: 10;
    }

    .left-arrow {
    left: 10px;
    }

    .right-arrow {
    right: 10px;
    }

</style>

<style>

    .custom-back-btn {
        width: 100px;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #ff9900, #ff5500);
        border-radius: 22px;
        cursor: pointer;
        border: none;
        height: 38px;
    }

        .custom-back-btn > svg {
            margin-right: 5px;
            margin-left: 5px;
            font-size: 20px;
            transition: all 0.4s ease-in;
        }

        .custom-back-btn:hover > svg {
            font-size: 1.2em;
            transform: translateX(-5px);
        }

        .custom-back-btn:hover {
            box-shadow: 9px 9px 33px #d1d1d1, -9px -9px 33px #ffffff;
            transform: translateY(-2px);
        }
</style>








@if (User.Identity.IsAuthenticated)
{





<!-- Full-Width Tag Scroller with Arrows -->
    <div class="tags-container mt-2" data-tags="@string.Join(",", Model.Tags.Select(t => t.Name.ToLower()))"
         style="border-radius:5px;border:1px solid #004a93; box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;">
    <button class="scroll-arrow left-arrow" id="scrollLeft">&#10094;</button>

    <div class="tags-scroll" id="tagScroller" style="margin-left: 28px;
  margin-right: 21px;">
        @if (Model != null && Model.Tags.Any())
        {
            @foreach (var tag in Model.Tags)
            {
                <a asp-controller="Home" asp-action="Index" asp-route-tag="@tag.Name"
                       class="tag-card badge tag-filter" style="box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;border:1px solid #004a93">
                    #@tag.Name
                </a>
            }
        }
        else
        {
            <p class="text-muted">No tags available</p>
        }
    </div>

    <button class="scroll-arrow right-arrow" id="scrollRight">&#10095;</button>
</div>






<div class="row mt-2">


    <div class="col-lg-8 order-lg-1 order-2">
        @if (Model != null && Model.BlogPosts.Any())
        {
                @foreach (var blogPost in Model.BlogPosts.OrderByDescending(b => b.PublishedDate))
                {


                    <div class="card mb-2 shadow-sm blog-post"
                         data-tags="@string.Join(",", blogPost.Tags.Select(t => t.Name.ToLower()))">


                        <div class="card-body" style="border: 1px solid #004a93; border-radius:7px; box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;">

                        <div class="row">
                            <!-- Blog Image -->
                            <div class="col-sm-4">
                                <div class="d-flex align-items-start">
                                    <img src="@blogPost.FeaturedImageUrl" alt="@blogPost.Heading"
                                    class="mb-5 d-flex align-self-center me-3"
                                    style="height: 200px; width: 230px; border-radius: 10px; object-fit: cover;" />
                                </div>
                            </div>

                            <!-- Blog Details -->
                            <div class="col-sm-8">
                                <a asp-area=""
                                asp-controller="Blogs"
                                asp-action="Index"
                                asp-route-urlHandle="@blogPost.UrlHandle">
                                    <h4 class="mb-1" style="font-size:19px; font-weight: bold;">@blogPost.Heading</h4>
                                </a>
                                <p class="mb-2 text-muted">
                                    <strong>Author:</strong> @blogPost.Author <br />
                                </p>
                                <p class="mb-1">@blogPost.ShortDescription</p>
                            </div>
                        </div>

                            <hr style="border-top: 1px solid #004a93; margin-top: -2.25rem !important;" />

                        <!-- Tags & Published Date Section -->
                        <div class="row align-items-center">
                            <div class="col-md-7">
                                <p class="mb-1">
                                        @foreach (var tag in blogPost.Tags)
                                        {
                                            <a href="#" class="badge tag-filter"
                                               style="background: #73c5ff; color: #002d5a; border: 1px solid #002d5a; border-radius: 5px;">
                                                #@tag.Name
                                            </a>
                                        }

                                </p>
                            </div>


                                <div class="col-md-5 text-md-end">
                                    @{
                                        DateTime publishedDate = blogPost.PublishedDate;
                                        DateTime now = DateTime.Now;
                                        TimeSpan timeDifference = now - publishedDate;

                                        string formattedDate;

                                        if (timeDifference.TotalDays < 1)
                                        {
                                            formattedDate = "Today";
                                        }
                                        else if (timeDifference.TotalDays < 7)
                                        {
                                            int days = (int)timeDifference.TotalDays;
                                            formattedDate = $"{days} day{(days > 1 ? "s" : "")} ago";
                                        }
                                        else if (timeDifference.TotalDays < 30)
                                        {
                                            int weeks = (int)(timeDifference.TotalDays / 7);
                                            formattedDate = $"{weeks} week{(weeks > 1 ? "s" : "")} ago";
                                        }
                                        else if (timeDifference.TotalDays < 365)
                                        {
                                            int months = (int)(timeDifference.TotalDays / 30);
                                            formattedDate = $"{months} month{(months > 1 ? "s" : "")} ago";
                                        }
                                        else
                                        {
                                            int years = (int)(timeDifference.TotalDays / 365);
                                            formattedDate = $"{years} year{(years > 1 ? "s" : "")} ago";
                                        }
                                    }
                                    <strong>Published:</strong> @formattedDate
                                </div>

                        </div>

                    </div>
                </div>


                 }





                <div class="row mb-3 align-items-center">
                    <div class="col-sm-4">
                        <!-- Pagination -->
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                @{
                                    int totalPages = Convert.ToInt32(ViewBag.TotalPages);
                                    int currentPage = Convert.ToInt32(ViewBag.PageNumber);
                                    int startPage = Math.Max(1, currentPage - 2);
                                    int endPage = Math.Min(totalPages, currentPage + 2);
                                }

                                <!-- Previous Button -->
                                <li class="page-item @(currentPage == 1 ? "disabled" : "")" style="color:gray; border:1px solid gray;">
                                    <a class="page-link"
                                       asp-controller="Home"
                                       asp-action="Index"
                                       asp-route-pageNumber="@(currentPage - 1)"
                                       asp-route-pageSize="@ViewBag.PageSize"
                                       asp-route-searchQuery="@ViewBag.SearchQuery"
                                       asp-route-sortBy="@ViewBag.SortBy"
                                       asp-route-sortDirection="@ViewBag.SortDirection">
                                        Previous
                                    </a>
                                </li>

                                <!-- Page Numbers -->
                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(i == currentPage ? "active" : "")" style="color:gray; border:1px solid gray;">
                                        <a class="page-link"
                                           asp-controller="Home"
                                           asp-action="Index"
                                           asp-route-pageNumber="@i"
                                           asp-route-pageSize="@ViewBag.PageSize"
                                           asp-route-searchQuery="@ViewBag.SearchQuery"
                                           asp-route-sortBy="@ViewBag.SortBy"
                                           asp-route-sortDirection="@ViewBag.SortDirection"
                                           style="@(i == currentPage ? "background-color: gray; color: white;" : "")">
                                            @i
                                        </a>
                                    </li>
                                }

                                <!-- Next Button -->
                                <li class="page-item @(currentPage == totalPages ? "disabled" : "")" style="color:gray; border:1px solid gray;">
                                    <a class="page-link"
                                       asp-controller="Home"
                                       asp-action="Index"
                                       asp-route-pageNumber="@(currentPage + 1)"
                                       asp-route-pageSize="@ViewBag.PageSize"
                                       asp-route-searchQuery="@ViewBag.SearchQuery"
                                       asp-route-sortBy="@ViewBag.SortBy"
                                       asp-route-sortDirection="@ViewBag.SortDirection">
                                        Next
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>

                </div>




        }


    </div> <!-- end col -->



    <div class="col-lg-4 order-lg-2 order-1">
            <div class="card">
                <div class="card-body" style="border:1px solid #004a93; border-radius:7px;box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;">


                    <div class="row">
                        <h5 class="mb-3 text-uppercase bg-light p-2"
                            style="background: linear-gradient(to right, #f0f8fff7, #eef1f6);border: 1px solid #d4e2eff7;border-radius:7px">
                            Latest Posts
                        </h5>

                        @if (Model != null && Model.LatestBlogPosts.Any())
                        {
                            int count = 0;
                            foreach (var blogPost in Model.LatestBlogPosts)
                            {
                                <a asp-area=""
                                   asp-controller="Blogs"
                                   asp-action="Index"
                                   asp-route-searchQuery= null
                                   asp-route-urlHandle="@blogPost.UrlHandle"
                                   class="blog-post">
                                    <ul class="list-unstyled" style="border: 1px solid #004a93; padding:7px; border-radius:5px">
                                        <li class="mb-2">
                                            <div style="display: flex; align-items: center;">
                                                <div style="width: 40px; height: 40px; border-radius: 50%; border: 2px solid lightgray; background: linear-gradient(to right, #f0f8fff7, #eef1f6); display: flex; align-items: center; justify-content: center;">
                                                    <i class="fas fa-user" style="color: gray; font-size: 20px;"></i>
                                                </div>
                                                <span style="margin-left: 8px; font-size: 14px; font-weight: bold; color:slategray">@blogPost.Author</span>
                                            </div>

                                            <div>
                                                <h4 class="mb-1" style="font-size:14px; font-weight: bold;">@blogPost.Heading</h4>
                                            </div>

                                            <div class="col-md-5">
                                                @{
                                                    DateTime publishedDate = blogPost.PublishedDate;
                                                    DateTime now = DateTime.Now;
                                                    TimeSpan timeDifference = now - publishedDate;

                                                    string formattedDate;

                                                    if (timeDifference.TotalDays < 1)
                                                    {
                                                        formattedDate = "Today";
                                                    }
                                                    else if (timeDifference.TotalDays < 7)
                                                    {
                                                        int days = (int)timeDifference.TotalDays;
                                                        formattedDate = $"{days} day{(days > 1 ? "s" : "")} ago";
                                                    }
                                                    else if (timeDifference.TotalDays < 30)
                                                    {
                                                        int weeks = (int)(timeDifference.TotalDays / 7);
                                                        formattedDate = $"{weeks} week{(weeks > 1 ? "s" : "")} ago";
                                                    }
                                                    else if (timeDifference.TotalDays < 365)
                                                    {
                                                        int months = (int)(timeDifference.TotalDays / 30);
                                                        formattedDate = $"{months} month{(months > 1 ? "s" : "")} ago";
                                                    }
                                                    else
                                                    {
                                                        int years = (int)(timeDifference.TotalDays / 365);
                                                        formattedDate = $"{years} year{(years > 1 ? "s" : "")} ago";
                                                    }
                                                }
                                                @formattedDate
                                            </div>
                                        </li>
                                    </ul>
                                </a>
                                count++;
                            }
                        }
                    </div>

            




                    <div class="row mt-5" data-tags="@string.Join(",", Model.Tags.Select(t => t.Name.ToLower()))">

                        <h5 class="mb-3 text-uppercase bg-light p-2" style="background: linear-gradient(to right, #f0f8fff7, #eef1f6);#eef1f6);border: 1px solid #d4e2eff7;border-radius:7px">Recommended Tags</h5>

                        <div class="d-flex flex-wrap">

                                @if (Model != null && Model.Tags.Any())
                                {
                                    @foreach (var tag in Model.Tags)
                                    {
                                    <a href="#" class="badge tag-filter"
                                       style="background: #73c5ff; color: #002d5a; border: 1px solid #002d5a; border-radius: 5px;margin: 3px">
                                        #@tag.Name
                                    </a>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">No tags available</p>
                                }
                    </div>
                </div> 






                <div class="row mt-5">

                        <h5 class="mb-3 text-uppercase bg-light p-2" style="background: linear-gradient(to right, #f0f8fff7, #eef1f6);background: linear-gradient(to right, #f0f8fff7, #eef1f6);#eef1f6);border: 1px solid #d4e2eff7;border-radius:7px">Reading List</h5>

                    <div class="d-flex flex-wrap">

                      
                                    <p style="font-size:15px">
                                      Click the heading on any story to easily add it to your reading list or a custom list that you can share.
                                    </p>

                        <p style="font-size:12px">
                            Help

                            Status

                            About

                            Careers

                            Press

                            Blog

                            Privacy

                            Terms

                            Text to speech

                            Teams
                        </p>
                                
                    </div>
                </div>




            </div>
        </div> <!-- end card-->
        <!-- Recommended Tags Section -->
       
    </div>


</div>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css" rel="stylesheet">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>


    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const blogPosts = document.querySelectorAll(".blog-post");
            const tagLinks = document.querySelectorAll(".badge");

            tagLinks.forEach(tag => {
                tag.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default link behavior

                    let selectedTag = tag.textContent.trim().replace("#", "").toLowerCase();
                    let found = false; // Flag to check if any post is displayed

                    blogPosts.forEach(post => {
                        let tagsAttr = post.getAttribute("data-tags");

                        if (tagsAttr) { // Ensure data-tags attribute exists
                            let tags = tagsAttr.toLowerCase().split(",");

                            if (tags.includes(selectedTag)) {
                                post.style.display = "block";
                                found = true;
                            } else {
                                post.style.display = "none";
                            }
                        }
                    });

                          if (!found) {
            Swal.fire({
                icon: "warning",
                title: "No Posts Found",
                text: "There are no blog posts available for this tag.",
                confirmButtonColor: "#3085d6",
                confirmButtonText: "OK"
            });
        }

                });
            });

            // Show all posts when clicking the "Show All" button
            const showAllBtn = document.getElementById("showAllPosts");
            if (showAllBtn) {
                showAllBtn.addEventListener("click", function () {
                    blogPosts.forEach(post => {
                        post.style.display = "block";
                    });
                });
            }
        });

    </script>

  


    <script>
        document.getElementById("scrollLeft").addEventListener("click", function() {
            document.getElementById("tagScroller").scrollBy({ left: -200, behavior: "smooth" });
        });

        document.getElementById("scrollRight").addEventListener("click", function() {
            document.getElementById("tagScroller").scrollBy({ left: 200, behavior: "smooth" });
        });
    </script>

}

else  
{
    <div class="row align-items-center g-5 p-4">

        <!-- Text Section -->
        <div class="col-12">
            <h1 class="display-4 lh-1 text-dark"
                style="font-size: 90px; font-family:monospace;
                           line-height: 1.2; color: rgba(0, 0, 0, 0.9);font-weight:540;">
                Dev Insights
            </h1>
        </div>



        <div class="col-12" style="margin-top: 6px;">
            <h2 class="fw-bold text-dark"
                style="font-size: 40px; font-family: 'Courier New', monospace;
                           line-height: 1.2; color: rgba(0, 0, 0, 0.8);">
                Code, Frameworks & Tech Trends
            </h2>


        </div>



        <div class="col-12">
            <p class="lead text-muted" style="font-size: 18px; line-height: 1.6; max-width: 630px;margin-top: -54px;">
                Dive into the latest in programming, frameworks, AI, and tech innovations.
                Stay ahead with expert insights, tutorials, and hands-on guides.
            </p>
            <a href="Account/Login" class="btn btn-lg mt-3"
               style="border-radius: 50px; padding: 12px 30px; font-size: 18px;
                          background-color: #1e1e1e; color: white; text-transform: uppercase;
                          font-weight: bold;">
                Start Exploring
            </a>
        </div>

    </div>

    <!-- Full-Width Tag Scroller with Arrows -->
    <div class="tags-container mt-2" data-tags="@string.Join(",", Model.Tags.Select(t => t.Name.ToLower()))"
         style="border-radius:5px;border:1px solid #004a93; box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;">
        <button class="scroll-arrow left-arrow" id="scrollLeft">&#10094;</button>

        <div class="tags-scroll" id="tagScroller" style="margin-left: 28px;
  margin-right: 21px;">
            @if (Model != null && Model.Tags.Any())
            {
                @foreach (var tag in Model.Tags)
                {
                    <a asp-controller="Home" asp-action="Index" asp-route-tag="@tag.Name"
                       class="tag-card badge tag-filter" style="box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;border:1px solid #004a93">
                        #@tag.Name
                    </a>
                }
            }
            else
            {
                <p class="text-muted">No tags available</p>
            }
        </div>

        <button class="scroll-arrow right-arrow" id="scrollRight">&#10095;</button>
    </div>






    <div class="row mt-2">


        <div class="col-lg-8 order-lg-1 order-2">
            @if (Model != null && Model.BlogPosts.Any())
            {
                @foreach (var blogPost in Model.BlogPosts.OrderByDescending(b => b.PublishedDate))
                {


                    <div class="card mb-2 shadow-sm blog-post"
                         data-tags="@string.Join(",", blogPost.Tags.Select(t => t.Name.ToLower()))">


                        <div class="card-body" style="border: 1px solid #004a93; border-radius:7px">

                            <div class="row">
                                <!-- Blog Image -->
                                <div class="col-sm-4">
                                    <div class="d-flex align-items-start">
                                        <img src="@blogPost.FeaturedImageUrl" alt="@blogPost.Heading"
                                             class="mb-5 d-flex align-self-center me-3"
                                             style="height: 200px; width: 230px; border-radius: 10px; object-fit: cover;" />
                                    </div>
                                </div>

                                <!-- Blog Details -->
                                <div class="col-sm-8">
                                    <a asp-area=""
                                       asp-controller="Blogs"
                                       asp-action="Index"
                                       asp-route-urlHandle="@blogPost.UrlHandle">
                                        <h4 class="mb-1" style="font-size:19px; font-weight: bold;">@blogPost.Heading</h4>
                                    </a>
                                    <p class="mb-2 text-muted">
                                        <strong>Author:</strong> @blogPost.Author <br />
                                    </p>
                                    <p class="mb-1">@blogPost.ShortDescription</p>
                                </div>
                            </div>

                            <hr style="border-top: 1px solid #004a93; margin-top: -2.25rem !important;" />

                            <!-- Tags & Published Date Section -->
                            <div class="row align-items-center">
                                <div class="col-md-7">
                                    <p class="mb-1">
                                        @foreach (var tag in blogPost.Tags)
                                        {
                                            <a href="#" class="badge tag-filter"
                                               style="background: #73c5ff; color: #002d5a; border: 1px solid #002d5a; border-radius: 5px;">
                                                #@tag.Name
                                            </a>
                                        }

                                    </p>
                                </div>


                                <div class="col-md-5 text-md-end">
                                    @{
                                        DateTime publishedDate = blogPost.PublishedDate;
                                        DateTime now = DateTime.Now;
                                        TimeSpan timeDifference = now - publishedDate;

                                        string formattedDate;

                                        if (timeDifference.TotalDays < 1)
                                        {
                                            formattedDate = "Today";
                                        }
                                        else if (timeDifference.TotalDays < 7)
                                        {
                                            int days = (int)timeDifference.TotalDays;
                                            formattedDate = $"{days} day{(days > 1 ? "s" : "")} ago";
                                        }
                                        else if (timeDifference.TotalDays < 30)
                                        {
                                            int weeks = (int)(timeDifference.TotalDays / 7);
                                            formattedDate = $"{weeks} week{(weeks > 1 ? "s" : "")} ago";
                                        }
                                        else if (timeDifference.TotalDays < 365)
                                        {
                                            int months = (int)(timeDifference.TotalDays / 30);
                                            formattedDate = $"{months} month{(months > 1 ? "s" : "")} ago";
                                        }
                                        else
                                        {
                                            int years = (int)(timeDifference.TotalDays / 365);
                                            formattedDate = $"{years} year{(years > 1 ? "s" : "")} ago";
                                        }
                                    }
                                    <strong>Published:</strong> @formattedDate
                                </div>

                            </div>

                        </div>
                    </div>


                }





                <div class="row mb-3 align-items-center">
                    <div class="col-sm-4">
                        <!-- Pagination -->
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                @{
                                    int totalPages = Convert.ToInt32(ViewBag.TotalPages);
                                    int currentPage = Convert.ToInt32(ViewBag.PageNumber);
                                    int startPage = Math.Max(1, currentPage - 2);
                                    int endPage = Math.Min(totalPages, currentPage + 2);
                                }

                                <!-- Previous Button -->
                                <li class="page-item @(currentPage == 1 ? "disabled" : "")" style="color:gray; border:1px solid gray;">
                                    <a class="page-link"
                                       asp-controller="Home"
                                       asp-action="Index"
                                       asp-route-pageNumber="@(currentPage - 1)"
                                       asp-route-pageSize="@ViewBag.PageSize"
                                       asp-route-searchQuery="@ViewBag.SearchQuery"
                                       asp-route-sortBy="@ViewBag.SortBy"
                                       asp-route-sortDirection="@ViewBag.SortDirection">
                                        Previous
                                    </a>
                                </li>

                                <!-- Page Numbers -->
                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(i == currentPage ? "active" : "")" style="color:gray; border:1px solid gray;">
                                        <a class="page-link"
                                           asp-controller="Home"
                                           asp-action="Index"
                                           asp-route-pageNumber="@i"
                                           asp-route-pageSize="@ViewBag.PageSize"
                                           asp-route-searchQuery="@ViewBag.SearchQuery"
                                           asp-route-sortBy="@ViewBag.SortBy"
                                           asp-route-sortDirection="@ViewBag.SortDirection"
                                           style="@(i == currentPage ? "background-color: gray; color: white;" : "")">
                                            @i
                                        </a>
                                    </li>
                                }

                                <!-- Next Button -->
                                <li class="page-item @(currentPage == totalPages ? "disabled" : "")" style="color:gray; border:1px solid gray;">
                                    <a class="page-link"
                                       asp-controller="Home"
                                       asp-action="Index"
                                       asp-route-pageNumber="@(currentPage + 1)"
                                       asp-route-pageSize="@ViewBag.PageSize"
                                       asp-route-searchQuery="@ViewBag.SearchQuery"
                                       asp-route-sortBy="@ViewBag.SortBy"
                                       asp-route-sortDirection="@ViewBag.SortDirection">
                                        Next
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>

                </div>




            }


        </div> <!-- end col -->



        <div class="col-lg-4 order-lg-2 order-1">
            <div class="card">
                <div class="card-body" style="border:1px solid #004a93; border-radius:7px;">


                    <div class="row">
                        <h5 class="mb-3 text-uppercase bg-light p-2"
                            style="background: linear-gradient(to right, #f0f8fff7, #eef1f6);border: 1px solid #d4e2eff7;border-radius:7px">
                            Latest Posts
                        </h5>

                        @if (Model != null && Model.LatestBlogPosts.Any())
                        {
                            int count = 0;
                            foreach (var blogPost in Model.LatestBlogPosts)
                            {
                                <a asp-area=""
                                   asp-controller="Blogs"
                                   asp-action="Index"
                                   asp-route-searchQuery=null
                                   asp-route-urlHandle="@blogPost.UrlHandle"
                                   class="blog-post">
                                    <ul class="list-unstyled" style="border: 1px solid #004a93; padding:7px; border-radius:5px">
                                        <li class="mb-2">
                                            <div style="display: flex; align-items: center;">
                                                <div style="width: 40px; height: 40px; border-radius: 50%; border: 2px solid lightgray; background: linear-gradient(to right, #f0f8fff7, #eef1f6); display: flex; align-items: center; justify-content: center;">
                                                    <i class="fas fa-user" style="color: gray; font-size: 20px;"></i>
                                                </div>
                                                <span style="margin-left: 8px; font-size: 14px; font-weight: bold; color:slategray">@blogPost.Author</span>
                                            </div>

                                            <div>
                                                <h4 class="mb-1" style="font-size:14px; font-weight: bold;">@blogPost.Heading</h4>
                                            </div>

                                            <div class="col-md-5">
                                                @{
                                                    DateTime publishedDate = blogPost.PublishedDate;
                                                    DateTime now = DateTime.Now;
                                                    TimeSpan timeDifference = now - publishedDate;

                                                    string formattedDate;

                                                    if (timeDifference.TotalDays < 1)
                                                    {
                                                        formattedDate = "Today";
                                                    }
                                                    else if (timeDifference.TotalDays < 7)
                                                    {
                                                        int days = (int)timeDifference.TotalDays;
                                                        formattedDate = $"{days} day{(days > 1 ? "s" : "")} ago";
                                                    }
                                                    else if (timeDifference.TotalDays < 30)
                                                    {
                                                        int weeks = (int)(timeDifference.TotalDays / 7);
                                                        formattedDate = $"{weeks} week{(weeks > 1 ? "s" : "")} ago";
                                                    }
                                                    else if (timeDifference.TotalDays < 365)
                                                    {
                                                        int months = (int)(timeDifference.TotalDays / 30);
                                                        formattedDate = $"{months} month{(months > 1 ? "s" : "")} ago";
                                                    }
                                                    else
                                                    {
                                                        int years = (int)(timeDifference.TotalDays / 365);
                                                        formattedDate = $"{years} year{(years > 1 ? "s" : "")} ago";
                                                    }
                                                }
                                                @formattedDate
                                            </div>
                                        </li>
                                    </ul>
                                </a>
                                count++;
                            }
                        }
                    </div>






                    <div class="row mt-5" data-tags="@string.Join(",", Model.Tags.Select(t => t.Name.ToLower()))">

                        <h5 class="mb-3 text-uppercase bg-light p-2" style="background: linear-gradient(to right, #f0f8fff7, #eef1f6);#eef1f6);border: 1px solid #d4e2eff7;border-radius:7px">Recommended Tags</h5>

                        <div class="d-flex flex-wrap">

                            @if (Model != null && Model.Tags.Any())
                            {
                                @foreach (var tag in Model.Tags)
                                {
                                    <a href="#" class="badge tag-filter"
                                       style="background: #73c5ff; color: #002d5a; border: 1px solid #002d5a; border-radius: 5px;margin: 3px">
                                        #@tag.Name
                                    </a>
                                }
                            }
                            else
                            {
                                <p class="text-muted">No tags available</p>
                            }
                        </div>
                    </div>






                    <div class="row mt-5">

                        <h5 class="mb-3 text-uppercase bg-light p-2" style="background: linear-gradient(to right, #f0f8fff7, #eef1f6);background: linear-gradient(to right, #f0f8fff7, #eef1f6);#eef1f6);border: 1px solid #d4e2eff7;border-radius:7px">Reading List</h5>

                        <div class="d-flex flex-wrap">


                            <p style="font-size:15px">
                                Click the heading on any story to easily add it to your reading list or a custom list that you can share.
                            </p>

                            <p style="font-size:12px">
                                Help

                                Status

                                About

                                Careers

                                Press

                                Blog

                                Privacy

                                Terms

                                Text to speech

                                Teams
                            </p>

                        </div>
                    </div>




                </div>
            </div> <!-- end card-->
            <!-- Recommended Tags Section -->

        </div>


    </div>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.3/dist/sweetalert2.min.css" rel="stylesheet">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>


    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const blogPosts = document.querySelectorAll(".blog-post");
            const tagLinks = document.querySelectorAll(".badge");

            tagLinks.forEach(tag => {
                tag.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default link behavior

                    let selectedTag = tag.textContent.trim().replace("#", "").toLowerCase();
                    let found = false; // Flag to check if any post is displayed

                    blogPosts.forEach(post => {
                        let tagsAttr = post.getAttribute("data-tags");

                        if (tagsAttr) { // Ensure data-tags attribute exists
                            let tags = tagsAttr.toLowerCase().split(",");

                            if (tags.includes(selectedTag)) {
                                post.style.display = "block";
                                found = true;
                            } else {
                                post.style.display = "none";
                            }
                        }
                    });

                          if (!found) {
            Swal.fire({
                icon: "warning",
                title: "No Posts Found",
                text: "There are no blog posts available for this tag.",
                confirmButtonColor: "#3085d6",
                confirmButtonText: "OK"
            });
        }

                });
            });

            // Show all posts when clicking the "Show All" button
            const showAllBtn = document.getElementById("showAllPosts");
            if (showAllBtn) {
                showAllBtn.addEventListener("click", function () {
                    blogPosts.forEach(post => {
                        post.style.display = "block";
                    });
                });
            }
        });

    </script>




    <script>
        document.getElementById("scrollLeft").addEventListener("click", function() {
            document.getElementById("tagScroller").scrollBy({ left: -200, behavior: "smooth" });
        });

        document.getElementById("scrollRight").addEventListener("click", function() {
            document.getElementById("tagScroller").scrollBy({ left: 200, behavior: "smooth" });
        });
    </script>



    
        
   
   

}












































